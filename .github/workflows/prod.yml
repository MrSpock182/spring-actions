name: Deploy Application
on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Set up Maven cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Extract Maven Project Version
        id: extract_version
        run: echo "VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV

      - name: Check if Docker tag exists
        id: check_tag
        run: |
          TAG_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" https://hub.docker.com/v2/repositories/mrspock182/actions/tags/${{ env.VERSION }})
          if [ $TAG_EXISTS -eq 200 ]; then
            echo "Tag ${{ env.VERSION }} already exists. Exiting."
            exit 1
          fi

      - name: Build docker image
        run: docker build -t mrspock182/actions:${{ env.VERSION }} .

      - name: Tag image as latest
        run: docker tag mrspock182/actions:${{ env.VERSION }} mrspock182/actions:latest

      - name: Login Dockerhub
        run: echo ${{ secrets.DOCKERHUB_PASSWORD }} | docker login -u ${{ secrets.DOCKERHUB_USER }} --password-stdin

      - name: Push image to Docker Hub
        run: docker push mrspock182/actions:${{ env.VERSION }}

      - name: Push latest image to Docker Hub
        run: docker push mrspock182/actions:latest